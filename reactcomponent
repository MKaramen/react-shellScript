#!/bin/sh
PWD=$(pwd)
# check if the user is indeed at root of react project
name=$1

# defining no-color variable
NC="\033[0m"

if [ -d "${PWD}/src" ] 
    then 
        while [[ $name == "" ]]
        do 
            echo "Choose a name for your component : "
            read name
            name="$(tr '[:lower:]' '[:upper:]' <<< ${name:0:1})${name:1}"
        done 
    tput setaf 2; printf "Component will be created with name $name. ${NC}\n"
        
    else 
        tput setaf 1; printf "/src does not exist, check that you are in the right directory. \nExiting now. ${NC}\n" 
    exit  
fi

name="$(tr '[:lower:]' '[:upper:]' <<< ${name:0:1})${name:1}"

if [ -d "${PWD}/src/components" ]
    then
while [[ $response != "y" && $response != "Y" ]]
do
        echo "This script will create files for react component $name. Continue [y/n]?"
        read response
            if [[ $response = "n" ]] || [[ $response = "N" ]] ; 
            then
                tput setaf 1; printf "Exiting now ${NC}\n"
                exit
            fi
done       
    else
        echo "Components directory not found. Create directory + react component $name ? [y/n]"
        read response
            if [[ $response = "y" || $response = "Y" ]] ; 
                then
                    mkdir ${PWD}/src/components
                    tput setaf 2; printf "/components folder created ${NC}" 
                else
                    tput setaf 1; printf "Exiting now ${NC}\n"
                    exit
            fi
        
fi
    
while [[ $typeComponent != 1 && $typeComponent != 2 ]]
do 
    echo "Type [1] for a function component OR Type [2] for a class component?"
    read typeComponent
done 

case $typeComponent in 
    1) mkdir ${PWD}/src/components/$name;
        cat << EOF > ${PWD}/src/components/$name/$name.js
import React from 'react';
import styles from './$name.module.css';

const $name = props => {
    
};

export default $name;
EOF
        touch ${PWD}/src/components/$name/$name.module.css;
        tput setaf 2; printf "Created directories and files for functional component! ${NC}\n";;

    2) mkdir ${PWD}/src/components/$name;
        cat << EOF > ${PWD}/src/components/$name/$name.js
import React, { Component } from 'react';
import styles from './$name.module.css';

class $name extends Component {
    render() {
        return
    }
};

export default $name;
EOF
        touch ${PWD}/src/components/$name/$name.module.css;
        tput setaf 2; printf "Created directories and files for class component! ${NC}\n";;
esac